@using Microsoft.AspNetCore.Identity
@using FitnessApp.Data.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IInstructorService instructorService
@using static FitnessApp.Web.Infrastructure.Constants.CustomClaims

@{
    string userName = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        userName = User.FindFirstValue(FitnessApp.Web.Infrastructure.Constants.CustomClaims.UserFullNameClaim) ?? string.Empty;
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (await instructorService.ExistsByUserIdAsync(User.Id()) == false && User.IsAdmin() == false)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Instructor" asp-action="Become">Become Instructor</a>
            </li>
        }

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
