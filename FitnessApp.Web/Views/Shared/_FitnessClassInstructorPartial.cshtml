@model FitnessClassInstructorViewModel
@using FitnessApp.Services.Data.Contracts
@using FitnessApp.Web.Extensions
@inject IInstructorService instructorService
@inject IFitnessClassService fitnessClassService

<div class="col-md-4">
    <div class="card mb-3">
        <div class="card-body text-center">
            <h5 class="card-title">Class Title</h5>
            <p>@Model.Title</p>

            <h5 class="card-title">Is Active</h5>
            <p>@(Model.IsActive ? "Active" : "Canceled")</p>

            <h5 class="card-title">Capacity</h5>
            <p>@Model.LeftCapacity</p>

            <h5 class="card-title">Start Time</h5>
            <p>@Model.StartTime</p>

            @if (User?.Identity?.IsAuthenticated == true)
            {
                <a asp-controller="FitnessClass" asp-action="Details" asp-route-fitnessClassId="@Model.FitnessClassId" class="btn btn-primary" role="button">Details</a>
                if (await fitnessClassService.HasInstructorWithIdAsync(Model.FitnessClassId, User.Id())
                || User.IsAdmin())
                {
                    <a asp-area="" asp-controller="FitnessClass" asp-action="Edit" asp-route-fitnessClassId="@Model.FitnessClassId"
                       class="btn btn-warning">Edit</a>
                    <a asp-area="" asp-controller="FitnessClass" asp-action="Delete" asp-route-fitnessClassId="@Model.FitnessClassId"
                       class="btn btn-danger">Delete</a>
                    if (Model.IsActive == true)
                    {
                        <a asp-area="" asp-controller="FitnessClass" asp-action="CancelClass" asp-route-fitnessClassId="@Model.FitnessClassId"
                           class="btn btn-danger">Cancel Class</a>
                    }
                }
            }
        </div>
    </div>
</div>
