@model FitnessClassDetailsServiceModel
@inject IInstructorService instructorService
@inject IFitnessClassService fitnessClassService

@{
    ViewBag.Title = "Fitness Class Details";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="container" style="display:inline">
    <div class="row">
        <div class="col-8">
            <p style="font-size:25px;"><u>@Model.Title</u></p>
            <p>@Model.Description</p>
            <p>Category: <b>@Model.Category</b></p>
            <div class="form-inline">
                @if (this.User?.Identity?.IsAuthenticated == true)
                {
                    if (await fitnessClassService.HasInstructorWithIdAsync(Model.Id, User.Id())
                    || User.IsAdmin())
                    {
                        <a class="btn btn-warning" asp-controller="FitnessClass" asp-action="Edit"
                           asp-route-fitnessClassId="@Model.Id">Edit</a>
                        <a class="ml-2 btn btn-danger" asp-controller="FitnessClass" asp-action="Delete"
                           asp-route-fitnessClassId="@Model.Id">Delete</a>
                        if (Model.Status == "Active" || Model.Status == "Full")
                        {
                            <a class="ml-2 btn btn-danger" asp-controller="FitnessClass" asp-action="CancelClass"
                               asp-route-fitnessClassId="@Model.Id">CancelClass</a>
                        }
                    }

                    if (await fitnessClassService.IsBookedByIUserWithIdAsync(Model.Id, User.Id()) == false
                    && ((await instructorService.ExistsByUserIdAsync(User.Id())) == false || User.IsAdmin())
                    && Model.Status == "Active")
                    {

                        <form class="ml-2" asp-controller="FitnessClass"
                              asp-action="Book" asp-route-fitnessClassId="@Model.Id" method="post">
                            <input class="btn btn-primary" type="submit" value="Book Class" />
                        </form>

                    }
                    else if (await fitnessClassService.IsBookedByIUserWithIdAsync(Model.Id, User.Id()) == true)
                    {
                        <form class="ml-2" asp-controller="FitnessClass" asp-action="UnBook"
                              asp-route-fitnessClassId="@Model.Id" method="post">
                            <input class="btn btn-primary" type="submit" value="Cancel Booking" />
                        </form>
                    }
                    if (Model.Status == "Finished" && await fitnessClassService.UserHasReviewedClassAsync(User.Id(), Model.Id) == false)
                    {
                        <a asp-controller="FitnessClass" asp-action="ReviewClass" asp-route-fitnessClassId="@Model.Id" class="btn btn-primary" role="button">Write review</a>
                    }
                }                
            </div>
            <div class="card mb-2" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">Instructor Info</h5>
                    <p class="card-text">Name:  @Model.Instructor.FullName</p>
                    <p class="card-text">Rating:  @Model.Instructor.Rating</p>
                </div>
            </div>
            @if (Model.Reviews.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Reviews</h5>
                        @foreach (var review in Model.Reviews)
                        {
                            <partial name="_ReviewPartial" model="@review" />
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>